[{"title":"a.x = a = {n:2}","date":"2017-03-20T00:16:03.000Z","path":"2017/03/20/a/","text":"话说最近在看javascript权威指南，感觉对这个语言有种莫名的喜欢。。。这个也应该是一个比较经典的问题了。先把问题放在这里 var a = {n: 1} var b = a; a.x = a = {n: 2} console.log(a.x); console.log(b.x); 想想看，输出结果都为什么值。 ##梳理 var a = {n: 1};创建”{n:1}”对象，并将a指向此地址空间（假设为&amp;001）; var b = a; 将 b 指向 a 的地址空间.(^b=&amp;001); a.x = a = {n: 2} 这里首先有两个问题要搞清楚,一个是’.’运算符优先度高于赋值运算,也就是常说的声明提升.第二个问题是连等赋值是右结合运算,a.x = a = {n: 2}相当于a.x = (a = {n: 2}). 于是整个过程是 先给 a.x 申请了一个地址空间,假设是&003;这里就是&amp;001.x=&003;又给 a 赋值一个{ n: 2 }新的地址空间,假设是&amp;003.这里^a=&002;让 a.x 指向 a, 于是&amp;001.x=&002;最后打印console.log(a.x); 打印&amp;002.x undefinedconsole.log(b.x); 打印&amp;001.x 得&amp;002 也就是 {n:2} js 的连等赋值还是有蛮多坑啊.不熟悉慎用.","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/child/tags/JavaScript/"}]},{"title":"今天搞定了回调函数","date":"2017-03-13T02:05:58.000Z","path":"2017/03/13/今天搞定了回调函数/","text":"#今天练习了回调函数","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/child/tags/随笔/"}]},{"title":"Hello World","date":"2017-03-08T15:29:16.000Z","path":"2017/03/08/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]